version: 0.0 # CodeDeploy 버전을 명시한다. # Make sure your AppSpec file specifies "0.0" as the version, and then try again # 출처: https://velog.io/@tigger/%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94-%EA%B5%AC%EC%84%B1
os: linux
files:
  - source: / # 전체 파일을 나타낸다.
    destination: /home/ubuntu/experiment/deploy # source로 지정된 전체 파일이 받을 위치이다.
    overwrite: yes # 기존 파일들이 있으면 덮어 쓸지를 결정한다.

permissions: # CodeDeploy에서 EC2 서버로 넘겨준 파일들이 모두 ubuntu 권한을 갖게끔 한다(owner, group 참고)
  - object: /
    pattern: "**"
    owner: ubuntu
    group: ubuntu
    mode: 755 # 이 mode는 반드시 필요한 수치일까?

hooks: # CodeDeploy 배포 단계에서 실행할 명령어 지정 -> ApplicationStart 단계에서 deploy.sh를 ubuntu권한 -> 사용자 권한으로 실행하게끔 한다.
#  BeforeInstall:
#    - location: beforeInstall.sh
#      timeout: 60
#      runas: ubuntu
#  AfterInstall:
#    - location: Ndeploy.sh
#      timeout: 60
#      runas: ubuntu
#  AfterInstall:
#    - location: stop.sh # nginx와 연결되지 않은 스프링 부트 종료.
#      timeout: 60
#      runas: ubuntu
#  ApplicationStart:
#    - location: start.sh # nginx와 연결되어 있지 않은 포트로 스프링 부트 시작.
#      timeout: 60
#      runas: ubuntu
#  ValidateService:
#    - location: health.sh # 새 서비스 health check.
#      timeout: 60
#      runas: ubuntu
  ApplicationStart: # 다음엔 AfterInstall 시도해보자 ApplicationStart
    - location: deploy.sh
      timeout: 60 # 제한시간(스크립트 실행 시간 한도)
      runas: ubuntu # runas root 과 runas ubuntu는 뭐가 다를까?
